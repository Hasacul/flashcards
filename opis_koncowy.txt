Link do filmiku: https://youtu.be/AQVivQccF-8

Program „Fiszki” - wykonywany przez 2 osoby (podział prac w filmiku).

Jest to program służący do ćwiczenia słownictwa. Po zalogowaniu można tworzyć swoje własne zbiory par wyrazów. Do wyboru są dwa tryby odpytywania. Pierwszy z nich to ćwiczenia. W tym trybie przy udzieleniu niepoprawnej odpowiedzi słowo zostaje w zbiorze pytań. Drugim trybem jest test, w którym nie ma możliwości poprawy złych odpowiedzi. Pary wyrazów są losowo wybierane z listy.
W aplikacji wykorzystaliśmy mechanizm wiązania zarówno dla danych jak i dla widoków. Jeden z przykładów wykorzystania znajduje się w pliku editSelectedListView. Obiekt ListView wykorzystuje dane znajdujące się w zmiennej observableList, która jest utworzona w klasie editSelectedListViewModel. Po inicjalizacji tej zmiennej jej zawartość jest automatycznie umieszczana na liście. Ten sam mechanizm jest wykorzystany do wiązania szerokości kolumny i pola do wpisania słowa. Dzięki temu mechanizmowi możliwa jest automatyczna zmiana szerokości kolumny po zwiększeniu rozmiaru okna.
W oknie głównym został wydzielony obszar do wyświetlania odpowiednich widoków. Jego aktualna zawartość jest powiązana z DataContextem. Po wciśnięciu klawisza np. Manage lists wywołujemy zdarzenie, w którym do DataContextu zostaje przypisany nowy obiekt klasy editListViewModel. Klasa ta jest powiązana z widokiem editListView, dlatego w obszarze widoku głównego zostanie wyświetlone właśnie ten widok.
Skalowanie elementów uzyskano dzięki wykorzystaniu kolumn i wierszy, które pozwalały wydzielić strefy, oraz odpowiednim wartościom marginesów. Niektóre przyciski miały również ustawioną maksymalną szerokość i wysokość, którą mogą osiągnąć aby uniknąć wizualnego rozciągnięcia. W celu wykluczenia sytuacji, w której elementy (podczas skalowania) mogłyby nachodzić na siebie użyto osobnych, wydzielonych stref dla każdego elementu.
 
Tylko osoba zalogowana może dodawać, usuwać lub edytować listę. Próba wykonania którejś z tych akcji nie będąc zalogowanym spowoduje wyświetlenie komunikatu o konieczności zalogowania. Informacja kto jest zalogowany znajduje się na pasku nawigacji poniżej przycisku Practice.
Do przechowywania par wyrazów wykorzystaliśmy listę składającą się z obiektów klasy pairWords, która posiada dwie właściwości typu string (odpowiednio pierwszy i drugi wyraz z pary).
W celu uniknięcia próby zapisu pliku z wykorzystaniem znaków zabronionych w systemie operacyjnym i w celu zapewnienia poprawnej pracy programu wykorzystaliśmy mechanizm wyrażeń regularnych przy pobieraniu danych od użytkownika. W przypadku użycia znaku zabronionego działanie zapisu zostaje wstrzymane a użytkownik jest powiadomiony o braku możliwości użycia takiego znaku.
W miejscach gdzie mogłyby wystąpić problemy z zapisem bądź odczytem pliku z powodu zablokowania pliku przez system, wykorzystano mechanizm try-catch. W przypadku braku możliwości dostępu do pliku błąd jest przechwycony, a aplikacja nie jest zamykana. 
